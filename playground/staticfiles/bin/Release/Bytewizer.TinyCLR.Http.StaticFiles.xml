<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytewizer.TinyCLR.Http.StaticFiles</name>
    </assembly>
    <members>
        <member name="T:Bytewizer.TinyCLR.Http.DefaultContentTypeProvider">
            <summary>
            Provides a default mapping between file extensions and MIME types.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultContentTypeProvider.#ctor">
            <summary>
            Creates a new provider with a set of default mappings.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultContentTypeProvider.#ctor(System.Collections.Hashtable)">
            <summary>
            Creates a lookup engine using the provided mapping.
            </summary>
            <param name="mapping">The cross reference table of file extensions and content-types. 
            Added types must be in all lowercase to properly match.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.DefaultContentTypeProvider.Mappings">
            <summary>
            The cross reference table of file extensions and content-types. Added types must be in all lowercase to properly match.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultContentTypeProvider.TryGetContentType(System.String,System.String@)">
            <summary>
            Given a file path, determine the MIME type
            </summary>
            <param name="subpath">A file path</param>
            <param name="contentType">The resulting MIME type</param>
            <returns>True if MIME type could be determined</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.IContentTypeProvider">
            <summary>
            Used to look up MIME types given a file path.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IContentTypeProvider.TryGetContentType(System.String,System.String@)">
            <summary>
            Given a file path, determine the MIME type.
            </summary>
            <param name="subpath">A file path</param>
            <param name="contentType">The resulting MIME type</param>
            <returns>True if MIME type could be determined</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.BlazorFrameworkExtensions">
            <summary>
            <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.BlazorFrameworkMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.BlazorFrameworkExtensions.UseBlazorFrameworkFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,System.String)">
            <summary>
            Configures the application to serve Blazor WebAssembly framework files from the path <paramref name="pathPrefix"/>. 
            This path must correspond to a referenced Blazor WebAssembly application project.
            </summary>
            <param name="pathPrefix">The path string that indicates the prefix for the Blazor WebAssembly application.</param>
            <param name="builder">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.BlazorFrameworkMiddleware">
            <summary>
            Enables file mapping for Blazor WebAssembly applications.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.BlazorFrameworkMiddleware.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.BlazorFrameworkMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.BlazorFrameworkMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.ResourceFileExtensions">
            <summary>
            Extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.ResourceFileExtensions.UseResourceFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.ResourceFileOptions)">
            <summary>
            Enables resource file serving for the current request path.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware">
            <summary>
            Enables serving resource files for a given request path.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.ResourceFileMiddleware.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.ResourceFileMiddleware.#ctor(Bytewizer.TinyCLR.Http.ResourceFileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware"/> class.
            </summary>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.ResourceFileMiddleware.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Http.ResourceFileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.ResourceFileMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <summary>
            Processes a request to determine if it matches a known file and if so serves it.
            </summary>
            <param name="context">The <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> that encapsulates all HTTP-specific information about an individual HTTP request.</param>
            <param name="next">The next request handler to be executed.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.DefaultFilesExtensions">
            <summary>
            Extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesExtensions.UseDefaultFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder)">
            <summary>
            Enables static file serving for the current request path.
            </summary>
            <param name="server">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesExtensions.UseDefaultFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.DefaultFilesOptions)">
            <summary>
            Enables static file serving for the current request path.
            </summary>
            <param name="server">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware"/> used to configure the middleware.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware">
            <summary>
            Determines if there is a default file present and appends the default file path.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware.#ctor(Bytewizer.TinyCLR.Http.DefaultFilesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/> class.
            </summary>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.DefaultFilesOptions"/> used to configure the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <summary>
            Processes a request to see if it matches a root directory, and if there are any files with the
            configured default names in that root directory.  If so this will append the corresponding file name to the request
            path for a later middleware to handle.
            </summary>
            <param name="context">The <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> that encapsulates all HTTP-specific information about an individual HTTP request.</param>
            <param name="next">The next request handler to be executed.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.FileServerExtensions">
            <summary>
            Extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.FileServerExtensions.UseFileServer(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder)">
            <summary>
            Enable all static file middleware for the current request path in the root directory.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.FileServerExtensions.UseFileServer(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.IContentTypeProvider)">
            <summary>
            Enable all static file middleware for the current request path in the root directory.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="provider">The <see cref="T:Bytewizer.TinyCLR.Http.IContentTypeProvider"/> Uused to map files to content-types.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware">
            <summary>
            Enables serving static files for a given request path.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileMiddleware.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileMiddleware.#ctor(Bytewizer.TinyCLR.Http.StaticFileOptions)">
            <summary>
            Initializes a default instance of the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/> class.
            </summary>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.StaticFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileMiddleware.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Http.StaticFileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.StaticFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <summary>
            Processes a request to determine if it matches a known file and if so serves it.
            </summary>
            <param name="context">The <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> that encapsulates all HTTP-specific information about an individual HTTP request.</param>
            <param name="next">The next request handler to be executed.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StaticFileExtensions">
            <summary>
            Extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileExtensions.UseStaticFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder)">
            <summary>
            Enables static file serving for the current request path.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileExtensions.UseStaticFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Logging.ILoggerFactory)">
            <summary>
            Enables static file serving for the current request path.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="loggerFactory">The factory used to create loggers.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StaticFileExtensions.UseStaticFiles(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.StaticFileOptions)">
            <summary>
            Enables static file serving for the current request path.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.StaticFileOptions"/> used to configure the middleware.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.DefaultFilesOptions">
            <summary>
            Options for selecting default file names.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.DefaultFilesOptions.#ctor">
            <summary>
            Configuration for the DefaultFilesMiddleware.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.DefaultFilesOptions.DriveProvider">
            <summary>
            Provides a drive mapping access for file streams.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.DefaultFilesOptions.DefaultFileNames">
            <summary>
            An ordered list of file names to select by default. List length and ordering may affect performance.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StaticFileOptions">
            <summary>
            Options for the <see cref="T:Bytewizer.TinyCLR.Http.StaticFileMiddleware"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.StaticFileOptions.DriveProvider">
            <summary>
            Provides a drive mapping access for file streams.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.StaticFileOptions.ContentTypeProvider">
            <summary>
            Used to map files to content-types.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.StaticFileOptions.DefaultContentType">
            <summary>
            The default content type for a request if the ContentTypeProvider cannot determine one.
            None is provided by default, so the client must determine the format themselves.
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.StaticFileOptions.ServeUnknownFileTypes">
            <summary>
            If the file is not a recognized content-type should it be served.
            Default: false.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.ResourceFileOptions">
            <summary>
            Options for the <see cref="T:Bytewizer.TinyCLR.Http.ResourceFileMiddleware"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.ResourceFileOptions.Resources">
            <summary>
            Used to map urls to resource files.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.ResourceFileOptions.ResourceManager">
            <summary>
            The resource manager that provides access resources at run time.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.ResourceFileOptions.ContentTypeProvider">
            <summary>
            Used to map files to content-types.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.ResourceFileOptions.DefaultContentType">
            <summary>
            The default content type for a request if the ContentTypeProvider cannot determine one.
            None is provided by default, so the client must determine the format themselves.
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.ResourceFileOptions.ServeUnknownFileTypes">
            <summary>
            If the file is not a recognized content-type should it be served.
            Default: false.
            </summary>
        </member>
    </members>
</doc>
