<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytewizer.TinyCLR.Http</name>
    </assembly>
    <members>
        <member name="T:Bytewizer.TinyCLR.Http.Features.HttpUpgradeFeature">
            <inheritdoc/>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.HttpUpgradeFeature.IsUpgradableRequest">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.HttpUpgradeFeature.Upgrade">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.IHttpUpgradeFeature">
            <summary>
            A feature interface for websockets server upgrade feature. Use <see cref="P:Bytewizer.TinyCLR.Http.HttpContext.Features"/>
            to access an instance associated with the current request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.IHttpUpgradeFeature.IsUpgradableRequest">
            <summary>
            Indicates if the server can upgrade this request to an opaque, bidirectional stream.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.IHttpUpgradeFeature.Upgrade">
            <summary>
            Attempt to upgrade the request to an opaque, bidirectional stream. The response status code
            and headers need to be set before this is invoked. Check <see cref="P:Bytewizer.TinyCLR.Http.Features.IHttpUpgradeFeature.IsUpgradableRequest"/>
            before invoking.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.FeatureCollection">
            <summary>
            An <see cref="T:Bytewizer.TinyCLR.Http.Features.FeatureCollection"/> type for key values.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Features.FeatureCollection._pairs">
            <summary>
            The array list used to store the pairs.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Features.FeatureCollection._lock">
            <summary>
            Thread synchronization.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.#ctor">
            <summary>
            Initializes a new empty uninitialized instance of class.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Item(System.Type)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found,
            attempting to get it returns null, and attempting to set it creates a new element
            using the specified key.
            </returns>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Item(System.Int32)">
            <summary>
            Gets the value associated with the specified index.
            </summary>
            <param name="index">The index whose value to get.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found,
            attempting to get it returns null, and attempting to set it creates a new element
            using the specified key.
            </returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Get(System.Type)">
            <summary>
            Retrieves the requested feature from the collection.
            </summary>
            <returns>The requested feature, or null if it is not present.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Set(System.Type,System.Object)">
            <summary>
            Sets the given feature in the collection.
            </summary>
            <param name="type">The feature type.</param>
            <param name="instance">The feature value.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Remove(System.Type)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="key">The key to remove from the collection.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            The one-dimensional <see cref="T:System.Array"/> that is the destination of <see cref="T:Bytewizer.TinyCLR.Http.Features.FeatureValue"/> 
            objects copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.Count">
            <summary>
            Gets the number of key/value pairs contained in the collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureCollection.GetEnumerator">
            <summary>
            Returns <see cref="T:System.Collections.IEnumerator"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator">
            <summary>
            Provides a class for enumerating over key/value pairs.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator.#ctor(Bytewizer.TinyCLR.Http.Features.FeatureCollection)">
            <summary>
            Creates a new instance of type <see cref="T:Bytewizer.TinyCLR.Http.Features.FeatureCollection"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator.Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator.MoveNext">
            <summary>
            Moves to the next item in the enumerator.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureEnumerator.Reset">
            <summary>
            Resets the enumerator to it's initial state.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.FeatureValue">
            <summary>
            Defines a key value pair that can be set or retrieved.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureValue.Key">
            <summary>
            Gets the key in the key/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.FeatureValue.Value">
            <summary>
            Gets the value in the key/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Features.FeatureValue"/> structure with the specified key and value.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureValue.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Features.FeatureValue"/> structure with the specified key and value.
            </summary>
            <param name="key">The key in the key/value pair.</param>
            <param name="value">The value in the key/value pair.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Features.FeatureValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.IStatusCodePagesFeature">
            <summary>
            Represents the Status code pages feature.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.IStatusCodePagesFeature.Enabled">
            <summary>
            Indicates if the status code middleware will handle responses.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.StatusCodePagesFeature">
            <summary>
            Represents the Status code pages feature.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.StatusCodePagesFeature.Enabled">
            <summary>
            Enables or disables status code pages. The default value is true.
            Set this to false to prevent the <see cref="T:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware"/>
            from creating a response body while handling the error status code.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.EndpointFeature">
            <summary>
            A feature for endpoint routing functionality.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.EndpointFeature.Endpoint">
            <inheritdoc />
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Features.IEndpointFeature">
            <summary>
            A feature interface for endpoint routing functionality.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Features.IEndpointFeature.Endpoint">
            <summary>
            Gets or sets the selected <see cref="P:Bytewizer.TinyCLR.Http.Features.IEndpointFeature.Endpoint"/> for the current request.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.UsePathBaseExtensions">
            <summary>
            Extension methods for <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.UsePathBaseExtensions.UsePathBase(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,System.String)">
            <summary>
            Adds a middleware that extracts the specified path base from request path and postpend it to the request path base.
            </summary>
            <param name="builder">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance.</param>
            <param name="pathBase">The path base to extract.</param>
            <returns>The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance.</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.UsePathBaseMiddleware">
            <summary>
            Represents a middleware that extracts the specified path base from request path and postpend it to the request path base.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.UsePathBaseMiddleware.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.UsePathBaseMiddleware"/> class.
            </summary>
            <param name="pathBase">The path base to extract.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.UsePathBaseMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Endpoint">
            <summary>
            Represents a logical endpoint in an application.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Endpoint.#ctor(Bytewizer.TinyCLR.Http.RequestDelegate,System.Collections.Hashtable,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/>.
            </summary>
            <param name="requestDelegate">The delegate used to process requests for the endpoint.</param>
            <param name="metadata">The endpoint metadata collection."/>. May be null.</param>
            <param name="displayName">The informational display name of the endpoint. May be null.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Endpoint.DisplayName">
            <summary>
            Gets or sets the informational display name of this endpoint.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Endpoint.Metadata">
            <summary>
            Gets the collection of metadata associated with this endpoint.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Endpoint.RequestDelegate">
            <summary>
            Gets the delegate used to process requests for the endpoint.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Endpoint.ToString">
            <summary>
            Returns a string representation of the endpoint.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.IFeatureCollection">
            <summary>
            Represents a collection of HTTP features.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IFeatureCollection.Item(System.Type)">
            <summary>
            Gets or sets a given feature. Setting a null value removes the feature.
            </summary>
            <param name="key"></param>
            <returns>The requested feature, or null if it is not present.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IFeatureCollection.Get(System.Type)">
            <summary>
            Retrieves the requested feature from the collection.
            </summary>
            <returns>The requested feature, or null if it is not present.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IFeatureCollection.Set(System.Type,System.Object)">
            <summary>
            Sets the given feature in the collection.
            </summary>
            <param name="type">The feature type.</param>
            <param name="instance">The feature value.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IFeatureCollection.IsReadOnly">
            <summary>
            Indicates if the collection can be modified.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.IHeaderDictionary">
            <summary>
            Represents the <see cref="T:Bytewizer.TinyCLR.Http.HttpRequest"/> and <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/> headers.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IHeaderDictionary.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IHeaderDictionary.ContentLength">
            <summary>
            Strongly typed access to the Content-Length header. 
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IHeaderDictionary.IfModifiedSince">
            <summary>
            Strongly typed access to the If-Modified-Since header.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IHeaderDictionary.Add(System.String,System.String)">
            <summary>
            Adds the specified element to the collection. If the specified header does not exist, the <see cref="M:Bytewizer.TinyCLR.Http.IHeaderDictionary.Add(System.String,System.String)"/> method inserts
            a new header into the list of header name/value pairs. If the specified header is already present, value is added to the
            comma-separated list of values associated with the header.
            </summary>
            <param name="key">The key to use as the key of the element to add.</param>
            <param name="value">The value of the header to add.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpContextExtensions">
            <summary>
            Extension methods for <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> related to routing.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpContextExtensions.GetEndpoint(Bytewizer.TinyCLR.Http.HttpContext)">
            <summary>
            Extension method for getting the <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/> for the current request.
            </summary>
            <param name="context">The <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> context.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpContextExtensions.SetEndpoint(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.Endpoint)">
            <summary>
            Extension method for setting the <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/> for the current request.
            </summary>
            <param name="context">The <see cref="T:Bytewizer.TinyCLR.Http.HttpContext"/> context.</param>
            <param name="endpoint">The <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/>.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.IQueryCollection">
            <summary>
            Represents a collection of query strings.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IQueryCollection.Item(System.String)">
            <summary>
            Gets the value with the specified key.
            </summary>
            <param name="key"> The key of the value to get.
            </param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IQueryCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:Bytewizer.TinyCLR.Http.IQueryCollection" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:Bytewizer.TinyCLR.Http.IQueryCollection" />.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.IQueryCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">The key of the value to get. When this method returns, the value associated with the specified key, if the
            key is found; otherwise, the default value for the type of the value parameter.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IQueryCollection.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ArrayList" /> containing the keys of the <see cref="T:Bytewizer.TinyCLR.Http.IQueryCollection" />.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.IQueryCollection.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ArrayList"/> containing the values of the <see cref="!:ICookieCollection" />.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.RequestDelegate">
            <summary>
            A function that can process a http request.
            </summary>
            <param name="context">The context for the request.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder">
            <summary>
            A base class for building an new <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder.RequestDelegate">
            <summary>
            Gets or sets the delegate used to process requests for the endpoint.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder.DisplayName">
            <summary>
            Gets or sets the informational display name of this endpoint.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder.Metadata">
            <summary>
            Gets the collection of metadata associated with this endpoint.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder.Build">
            <summary>
            Creates an instance of <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/> from the <see cref="T:Bytewizer.TinyCLR.Http.Routing.EndpointBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/>.</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder">
            <summary>
            Defines a contract for a route builder in an application. A route builder specifies the routes for an application.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder.DataSources">
            <summary>
            Gets the endpoint data sources configured in the builder.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Routing.EndpointRouteDelegate">
            <summary>
            Represents a method to configure <see cref="T:Bytewizer.TinyCLR.Http.EndpointMiddleware"/> specific features.
            </summary>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder"/> configuration specific features.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint">
            <summary>
            Represents an <see cref="T:Bytewizer.TinyCLR.Http.Endpoint"/> that can be used in URL matching or URL generation.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint.#ctor(Bytewizer.TinyCLR.Http.RequestDelegate,System.String,System.Collections.Hashtable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint"/> class.
            </summary>
            <param name="requestDelegate">The delegate used to process requests for the endpoint.</param>
            <param name="routePattern">The <see cref="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint.RoutePattern"/> to use in URL matching.</param>
            <param name="metadata">The metadata associated with the endpoint.</param>
            <param name="displayName">The informational display name of the endpoint.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint.RoutePattern">
            <summary>
            Gets the <see cref="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint.RoutePattern"/> associated with the endpoint.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder">
            <summary>
            Supports building a new <see cref="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder.#ctor(Bytewizer.TinyCLR.Http.RequestDelegate,System.String)">
            <summary>
            Constructs a new <see cref="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder"/> instance.
            </summary>
            <param name="requestDelegate">The delegate used to process requests for the endpoint.</param>
            <param name="routePattern">The <see cref="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder.RoutePattern"/> to use in URL matching.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder.RoutePattern">
            <summary>
            Gets or sets the <see cref="P:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder.RoutePattern"/> associated with this endpoint.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Routing.RouteEndpointBuilder.Build">
            <inheritdoc />
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.EndpointRouteBuilderExtensions">
            <summary>
            Provides extension methods for <see cref="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder"/> to add endpoints.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRouteBuilderExtensions.Map(Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder,System.String,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <summary>
            Adds a <see cref="T:Bytewizer.TinyCLR.Http.Routing.RouteEndpoint"/> to the <see cref="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder"/> that matches HTTP requests
            for the specified pattern.
            </summary>
            <param name="endpoints">The <see cref="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The route pattern.</param>
            <param name="requestDelegate">The delegate executed when the endpoint is matched.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.EndpointMiddleware">
            <summary>
            Enables endpoint routing features for incoming requests.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointMiddleware.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.EndpointMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointMiddleware.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.EndpointMiddleware"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.UseMiddlewareExtensions">
            <summary>
            Extension methods for adding typed middleware.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.UseMiddlewareExtensions.UseMiddleware(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,System.Type)">
            <summary>
            Adds a <see cref="T:Bytewizer.TinyCLR.Pipeline.IMiddleware"/> type to the servers request pipeline.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance.</param>
            <param name="middleware">The middleware type.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.UseMiddlewareExtensions.UseMiddleware(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,System.Type,System.Object[])">
            <summary>
            Adds a <see cref="T:Bytewizer.TinyCLR.Pipeline.IMiddleware"/> type to the servers request pipeline.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance.</param>
            <param name="middleware">The middleware type.</param>
            <param name="args">The arguments to pass to the middleware type instance's constructor.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StatusCodePagesExtensions">
            <summary>
            <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesExtensions.UseStatusCodePages(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder)">
            <summary>
            Status code middleware with the given options that checks for responses with status codes 
            between 400 and 599 that do not have a body.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesExtensions.UseStatusCodePages(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.StatusCodePagesOptions)">
            <summary>
            Captures <see cref="T:System.Exception"/> instances from the pipeline and generates error responses.
            </summary>
            <param name="app">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="options">The <see cref="T:Bytewizer.TinyCLR.Http.StatusCodePagesOptions"/> used to configure the middleware.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StatusCodePagesOptions">
            <summary>
            Options for configuring the <see cref="T:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesOptions.#ctor">
            <summary>
            Create an instance with the default options settings.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.StatusCodePagesOptions.Handle">
            <summary>
            The <see cref="T:Bytewizer.TinyCLR.Http.RequestDelegate" /> that will handle the exception. 
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware">
            <summary>
            A middleware for generating the response body of error status codes with no body.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:DeveloperExceptionPageMiddleware"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware.#ctor(Bytewizer.TinyCLR.Http.StatusCodePagesOptions)">
            <summary>
            Initializes a new instance of the <see cref="!:DeveloperExceptionPageMiddleware"/> class.
            </summary>
            <param name="options">The options for configuring the middleware.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.StatusCodePagesMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Header.HeaderDictionary">
            <summary>
            A <see cref="T:Bytewizer.TinyCLR.Http.Header.HeaderDictionary"/> type for case-insensitive header values. 
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Header.HeaderDictionary._pairs">
            <summary>
            The array list used to store the pairs.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Header.HeaderDictionary._lock">
            <summary>
            Thread synchronization.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.#ctor">
            <summary>
            Initializes a new empty uninitialized instance of class.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Item(System.Int32)">
            <summary>
            Gets the value associated with the specified index.
            </summary>
            <param name="index">The index whose value to get.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found,
            attempting to get it returns null, and attempting to set it creates a new element
            using the specified key.
            </returns>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.ContentLength">
            <inheritdoc/>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.IfModifiedSince">
            <inheritdoc/>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys in the collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains a specific key.
            </summary>
            <param name="key">The key to locate in the collection.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the
            key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <c>true</c> if the object that implements collection contains an element with the specified key; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Specified key is <c>null</c></exception>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="key">The key to remove from the collection.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Add(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            The one-dimensional <see cref="T:System.Array"/> that is the destination of <see cref="T:Bytewizer.TinyCLR.Http.Header.HeaderValue"/> 
            objects copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.Count">
            <summary>
            Gets the number of key/value pairs contained in the collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderDictionary.GetEnumerator">
            <summary>
            Returns <see cref="T:System.Collections.IEnumerator"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator">
            <summary>
            Provides a class for enumerating over key/value pairs.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator.#ctor(Bytewizer.TinyCLR.Http.Header.HeaderDictionary)">
            <summary>
            Creates a new instance of type <see cref="T:Bytewizer.TinyCLR.Http.Header.HeaderDictionary"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator.Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator.MoveNext">
            <summary>
            Moves to the next item in the enumerator.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderEnumerator.Reset">
            <summary>
            Resets the enumerator to it's initial state.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Header.HeaderValue">
            <summary>
            Defines a header value pair that can be set or retrieved.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderValue.Key">
            <summary>
            Gets the key in the header/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Header.HeaderValue.Value">
            <summary>
            Gets the value in the header/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Header.HeaderValue"/> structure with the specified key and value.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Header.HeaderValue"/> structure with the specified key and value.
            </summary>
            <param name="key">The key in the header/value pair.</param>
            <param name="value">The value in the header/value pair.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Header.HeaderValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HeaderNames">
            <summary>
            Well-know header names.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpContext">
            <summary>
            Encapsulates all HTTP-specific information about an individual HTTP request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpContext.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Bytewizer.TinyCLR.Http.HttpContext" /> class.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpContext.Features">
            <summary>
            Gets the collection of HTTP features provided by the server 
            and middleware available on this request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpContext.Request">
            <summary>
            Gets the <see cref="T:Bytewizer.TinyCLR.Http.HttpRequest"/> object for this request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpContext.Response">
            <summary>
            Gets the <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/> object for this request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpContext.Channel">
            <summary>
            Gets or sets the object used to manage user session data for this request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpContext.Connection">
            <summary>
            Gets information about the underlying connection for this request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpContext.Abort">
            <summary>
            Aborts the connection underlying this request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpContext.Clear">
            <summary>
            Closes the connected socket channel and clears context.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpMethods">
            <summary>
            Contains methods to verify the request method of an HTTP request. 
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpProtocol">
            <summary>
            Contains methods to verify the request protocol version of an HTTP request. 
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpRequest">
            <summary>
            Represents the incoming side of an individual HTTP request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpRequest.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Bytewizer.TinyCLR.Http.HttpRequest" /> class.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Headers">
            <summary>
            Gets the request headers.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Query">
            <summary>
            Gets the query value collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Body">
            <summary>
            Gets or sets the request body Stream.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Method">
            <summary>
            Gets or sets the HTTP method.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Protocol">
            <summary>
            Gets or sets the request protocol (e.g. HTTP/1.1).
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Path">
            <summary>
            Gets or sets the request path.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.PathBase">
            <summary>
            Gets or sets the base path for the request. The path base should not end with a trailing slash.
            </summary>
            <returns>The base path for the request.</returns>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.ContentLength">
            <summary>
            Gets or sets the value for the Content-Length response header.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.ContentType">
            <summary>
            Gets or sets the value for the Content-Type response header.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpRequest.Host">
            <summary>
            Gets or sets the value for the Host response header.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpRequest.Clear">
            <summary>
            Clears the <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/> headers, query, cookies and body.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpRequest.ToString">
            <summary>
            Get string from the current HTTP request
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpResponse">
            <summary>
            Represents the outgoing side of an individual HTTP request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponse.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse" /> class.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpResponse.Headers">
            <summary>
            Gets the response headers.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpResponse.Body">
            <summary>
            Gets or sets the response body <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpResponse.StatusCode">
            <summary>
            Gets or sets the HTTP response code.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpResponse.ContentLength">
            <summary>
            Gets or sets the value for the Content-Length response header.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.HttpResponse.ContentType">
            <summary>
            Gets or sets the value for the Content-Type response header.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponse.Clear">
            <summary>
            Clears the <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/> headers, cookies and body.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpResponseExtensions">
            <summary>
            Convenience methods for <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.Write(Bytewizer.TinyCLR.Http.HttpResponse,System.String)">
            <summary>
            Writes the given text to the response body. UTF-8 encoding will be used.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.</param>
            <param name="text">The text to write to the response.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.Write(Bytewizer.TinyCLR.Http.HttpResponse,System.String,System.String)">
            <summary>
            Writes the given text to the response body. UTF-8 encoding will be used.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.</param>
            <param name="text">The text to write to the response.</param>
            <param name="contentType">The content MIME type.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.Write(Bytewizer.TinyCLR.Http.HttpResponse,System.String,System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Writes the given text to the response body using the given encoding.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.</param>
            <param name="text">The text to write to the response.</param>
            <param name="contentType">The content MIME type.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <param name="encoding">The encoding to use.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.Redirect(Bytewizer.TinyCLR.Http.HttpResponse,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns a redirect response (HTTP 301, HTTP 302, HTTP 307 or HTTP 308) to the client.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/> to redirect.</param>
            <param name="location">The URL to redirect the client to. This must be properly encoded for use in http headers where only ASCII characters are allowed.</param>
            <param name="permanent"><c>True</c> if the redirect is permanent (301 or 308), otherwise <c>false</c> (302 or 307).</param>
            <param name="preserveMethod"><c>True</c> if the redirect needs to reuse the method and body (308 or 307), otherwise <c>false</c> (301 or 302).</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.SendFile(Bytewizer.TinyCLR.Http.HttpResponse,System.String,System.String)">
            <summary>
            Sends the given file to the response body.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.</param>
            <param name="fullPath">The full path to the file.</param>
            <param name="contentType">The Content-Type header of the file response.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpResponseExtensions.SendFile(Bytewizer.TinyCLR.Http.HttpResponse,System.IO.Stream,System.String,System.String)">
            <summary>
            Sends the given file to the response body.
            </summary>
            <param name="response">The <see cref="T:Bytewizer.TinyCLR.Http.HttpResponse"/>.</param>
            <param name="fileStream">The full path to the file.</param>
            <param name="contentType">The Content-Type header of the file response.</param>
            <param name="fileName">The file name that will be used in the Content-Disposition header of the response.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Query.QueryCollection">
            <summary>
            An <see cref="T:Bytewizer.TinyCLR.Http.Query.QueryCollection"/> type for query values.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Query.QueryCollection._pairs">
            <summary>
            The array list used to store the pairs.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Http.Query.QueryCollection._lock">
            <summary>
            Thread synchronization.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.#ctor">
            <summary>
            Initializes a new empty uninitialized instance of class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.#ctor(System.Collections.ArrayList)">
            <summary>
             Initializes a new empty instance of the class using the specified <see cref="T:System.Collections.ArrayList"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found,
            attempting to get it returns null, and attempting to set it creates a new element
            using the specified key.
            </returns>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.Item(System.Int32)">
            <summary>
            Gets the value associated with the specified index.
            </summary>
            <param name="index">The index whose value to get.</param>
            <returns>
            The value associated with the specified key. If the specified key is not found,
            attempting to get it returns null, and attempting to set it creates a new element
            using the specified key.
            </returns>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the keys in the collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the values in the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains a specific key.
            </summary>
            <param name="key">The key to locate in the collection.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.TryGetValue(System.String,System.String@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the
            key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            <c>true</c> if the object that implements collection contains an element with the specified key; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Specified key is <c>null</c></exception>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="key">The key to remove from the collection.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            The one-dimensional <see cref="T:System.Array"/> that is the destination of <see cref="T:Bytewizer.TinyCLR.Http.Query.QueryValue"/> 
            objects copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.Count">
            <summary>
            Gets the number of key/value pairs contained in the collection.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryCollection.GetEnumerator">
            <summary>
            Returns <see cref="T:System.Collections.IEnumerator"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Query.QueryEnumerator">
            <summary>
            Provides a class for enumerating over key/value pairs.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryEnumerator.#ctor(Bytewizer.TinyCLR.Http.Query.QueryCollection)">
            <summary>
            Creates a new instance of type <see cref="T:Bytewizer.TinyCLR.Http.Query.QueryEnumerator"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryEnumerator.Current">
            <summary>
            Gets the current key/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryEnumerator.MoveNext">
            <summary>
            Moves to the next item in the enumerator.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryEnumerator.Reset">
            <summary>
            Resets the enumerator to it's initial state.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Query.QueryValue">
            <summary>
            Defines a query string value pair that can be set or retrieved.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryValue.Key">
            <summary>
            Gets the key in the query/value pair.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Http.Query.QueryValue.Value">
            <summary>
            Gets the value in the route/value pair.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Query.QueryValue"/> structure with the specified key and value.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.Query.QueryValue"/> structure with the specified key and value.
            </summary>
            <param name="key">The key in the query/value pair.</param>
            <param name="value">The value in the query/value pair.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryValue.TryParseList(System.String,System.Collections.ArrayList@)">
            <summary>
            Parse a query string into its component key and value parts.
            </summary>
            <param name="queryString">The raw query string value with or without the leading '?'.</param>
            <param name="parsedValues">A collection containing the query string values.</param>
            <returns>A collection of parsed keys and values.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Query.QueryValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.QueryParser">
            <summary>
            Provides methods for parsing and manipulating query strings.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.QueryParser.ParseQuery(System.String)">
            <summary>
            Parse a query string into its component key and value parts.
            </summary>
            <param name="queryString">The raw query string value, with or without the leading '?'.</param>
            <returns>A collection of parsed keys and values.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.QueryParser.ParseNullableQuery(System.String)">
            <summary>
            Parse a query string into its component key and value parts.
            </summary>
            <param name="queryString">The raw query string value, with or without the leading '?'.</param>
            <returns>A collection of parsed keys and values, null if there are no entries.</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Middleware">
            <summary>
            Represents a base implementation of the <see cref="T:Bytewizer.TinyCLR.Http.Middleware"/> for creating an application request pipeline.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Middleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <summary>
            Invokes a middleware in the application pipeline.
            </summary>
            <param name="context">The context for the request.</param>
            <param name="next">The next request handler to be executed.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Middleware.Use(Bytewizer.TinyCLR.Pipeline.InlineMiddlewareDelegate)">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Middleware.Use(Bytewizer.TinyCLR.Pipeline.IMiddleware)">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Middleware.Bytewizer#TinyCLR#Pipeline#Builder#IApplication#Invoke(Bytewizer.TinyCLR.Pipeline.IContext)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.Extensions.StreamReaderExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.IO.StreamReader"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.Extensions.StreamReaderExtensions.SkipWhiteSpace(System.IO.StreamReader)">
            <summary>
            Skips white space in the current stream.
            </summary>
            <param name="reader">The source <see cref="T:System.IO.StreamReader"/>.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.EndpointRoutingExtensions">
            <summary>
            <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> extension methods for the <see cref="T:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRoutingExtensions.UseRouting(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder)">
            <summary>
            Adds routing middleware features supporting endpoint routing.
            </summary>
            <param name="builder">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRoutingExtensions.UseEndpoints(Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder,Bytewizer.TinyCLR.Http.Routing.EndpointRouteDelegate)">
            <summary>
            Adds routing middleware features supporting endpoint routing.
            </summary>
            <param name="builder">The <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> instance this method extends.</param>
            <param name="configure">An <see cref="T:Bytewizer.TinyCLR.Http.Routing.EndpointRouteDelegate"/> to configure the provided <see cref="T:Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder"/>.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware">
            <summary>
            Enables routing feature to match the URLs of incoming requests.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware.#ctor(Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware"/> class.
            </summary>
            <param name="endpointRouteBuilder">The endpoint data sources configured in the builder.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Http.Routing.IEndpointRouteBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="endpointRouteBuilder">The endpoint data sources configured in the builder.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.EndpointRoutingMiddleware.Invoke(Bytewizer.TinyCLR.Http.HttpContext,Bytewizer.TinyCLR.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Http.HttpServer">
            <summary>
            Represents an implementation of the <see cref="T:Bytewizer.TinyCLR.Http.HttpServer"/> for creating web servers.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpServer.#ctor(Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.HttpServer"/> class.
            </summary>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Http.HttpServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpServer.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpServer.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Pipeline.IMiddleware,Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Http.HttpServer"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="middleware">The <see cref="T:Bytewizer.TinyCLR.Pipeline.IMiddleware"/> to include in the application pipeline.</param>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Http.HttpServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Http.HttpServer.ClientConnected(System.Object,Bytewizer.TinyCLR.Sockets.Channel.SocketChannel)">
            <summary>
            A client has connected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="channel">The socket channel for the connected end point.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.CharExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Char"/> object.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.CharExtensions.IsWhiteSpace(System.Char)">
            <summary>
            Indicates whether the specified Unicode character is categorized as white space.
            </summary>
            <param name="source">The Unicode character to evaluate.</param>
            <returns><c>true</c> if c is white space; otherwise, <c>false</c>.</returns>
        </member>
    </members>
</doc>
