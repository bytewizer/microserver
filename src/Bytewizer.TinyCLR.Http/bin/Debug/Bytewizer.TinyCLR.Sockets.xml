<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytewizer.TinyCLR.Sockets</name>
    </assembly>
    <members>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.DisconnectedHandler">
            <summary>
            A delegate which is executed when a remote client has disconnected.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.ConnectedHandler">
            <summary>
            A delegate which is executed when a client has connected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="channel">The socket channel for the connected end point.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.SocketExceptionExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Net.Sockets.SocketException"/>.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptionsDelegate">
            <summary>
            Represents an options method to configure <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> specific features.
            </summary>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> configuration specific features.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.TcpListener">
            <summary>
            Represents an implementation of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> which listens for remote TCP clients.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.TcpListener.#ctor(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.TcpListener"/> class.
            <param name="options">Factory used to create objects used in this library.</param>
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.TcpListener.AcceptConnection">
            <summary>
            Accepted connection listening thread
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.UdpListener">
            <summary>
            Represents an implementation of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> which listens for remote UDP clients.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.UdpListener.#ctor(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.UdpListener"/> class.
            <param name="options">Factory used to create objects used in this library.</param>
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.UdpListener.AcceptConnection">
            <summary>
            Accepted connection listening thread
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener">
            <summary>
            Represents an implementation of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> which listens for remote clients.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.#ctor(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> class.
            <param name="options">Factory used to create objects used in this library.</param>
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.IsActive">
            <summary>
            Gets if listener has been started.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.Options">
            <summary>
            Gets the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions"/> used to configure <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.Start">
            <summary>
            Start listener.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.Stop">
            <summary>
            Stop the active listener.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.AcceptConnection">
            <summary>
            Accepted connection listening thread
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.OnConnected(Bytewizer.TinyCLR.Sockets.Channel.SocketChannel)">
            <summary>
            A client has connected.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.OnDisconnected(System.Exception)">
            <summary>
            A client has disconnected.
            </summary>
        </member>
        <member name="E:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.Connected">
            <summary>
            An event that is raised when a client is connected.
            </summary>
        </member>
        <member name="E:Bytewizer.TinyCLR.Sockets.Listener.SocketListener.Disconnected">
            <summary>
            An event that is raised when a client is disconnected.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions">
            <summary>
            Represents configuration options of socket specific features.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.IPEndPoint">
            <summary>
            Specifies a network <see cref="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.IPEndPoint"/> as an IP address and a port number.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.IsTls">
            <summary>
            Specifies to secure the connection using Tls.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.SslProtocols">
            <summary>
            Specifies the possible versions of SslProtocols that the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> class represents.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.Certificate">
            <summary>
            Specifies the X.509 certificate that the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> class represents.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.SocketType">
            <summary>
            Specifies the type of socket that the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> class represents.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.ProtocolType">
            <summary>
            Specifies the protocols that the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> class represents.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.ReuseAddress">
            <summary>
            Specifies the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> to be bound to an address that is already in use.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.KeepAlive">
            <summary>
            Specifies the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> to use keep-alives.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.Broadcast">
            <summary>
            Permit sending broadcast messages on the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.NoDelay">
            <summary>
            Disables the Nagle algorithm for send coalescing.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.SendTimeout">
            <summary>
            Specifies the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> send time-out.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.ReceiveTimeout">
            <summary>
            Specifies the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> receive time-out.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.SocketRetry">
            <summary>
            Specifies the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> socket retry limit before failing.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.ThreadPriority">
            <summary>
            Specifies the scheduling priority of <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.MinThreads">
            <summary>
            Specifies the minimum number of threads the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> thread pool creates on demand,
            as new requests are made, before switching to an algorithm for managing thread creation and destruction.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.MaxThreads">
            <summary>
            Specifies the number of requests to the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> thread pool that can be active
            concurrently. All requests above this number remain queued until thread pool threads become available.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.MaxPendingConnections">
            <summary>
            Specifies the maximum backlog of the <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> pending connections queue.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.MaxConcurrentConnections">
            <summary>
            Specifies the maximum number of  the  <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> open connections. 
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo">
            <summary>
            Represents a socket connection between two end points.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo.Id">
            <summary>
            Get the identity of this channel.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo.LocalIpAddress">
            <summary>
            Gets address of the local end point.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo.LocalPort">
            <summary>
            Gets port of the local end point.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo.RemoteIpAddress">
            <summary>
            Gets address of the connected end point.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.ConnectionInfo.RemotePort">
            <summary>
            Gets port of the connected end point.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel">
            <summary>
            Represents a socket channel between two end points.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Socket">
            <summary>
            Gets socket for the connected endpoint.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Connection">
            <summary>
            Gets socket information for the connected endpoint.  
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Data">
            <summary>
            Gets or sets a byte array that can be used to share data within the scope of this channel.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.InputStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> object representing the contents of the socket channel.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.OutputStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> object representing the contents of the socket channel.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Assign(System.Net.Sockets.Socket)">
            <summary>
            Assign a socket to this channel.
            </summary>
            <param name="socket">The connected socket for channel.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Assign(System.Net.Sockets.Socket,System.Byte[],System.Net.EndPoint)">
            <summary>
            Assign a socket to this channel.
            </summary>
            <param name="socket">The connected socket for channel.</param>
            <param name="buffer">The connected socket buffer for channel.</param>
            <param name="endpoint">The remote endpoint of the connected socket. </param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Assign(System.Net.Sockets.Socket,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Authentication.SslProtocols)">
            <summary>
            Assign a socket to this channel.
            </summary>
            <param name="socket">The connected socket for channel.</param>
            <param name="certificate">The X.509 certificate for channel.</param>
            <param name="allowedProtocols">The possible versions of ssl protocols channel allows.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.IsCleared">
            <summary>
            Determine whether the socket channel is cleared.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Clear">
            <summary>
            Closes and clears the connected socket channel.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Write(System.String)">
            <summary>
            Writes a new response to the connected socket channel.
            </summary>
            <param name="text">A <see cref="T:System.String"/> that contains data to be UTF8 encoded and sent.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Write(System.Byte[])">
            <summary>
            Writes a new response to the connected socket channel.
            </summary>
            <param name="bytes">A <see cref="T:System.Byte"/> array that contains data to be sent.</param>
            <returns>The number of bytes sent to the <see cref="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Socket"/>.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Write(System.IO.Stream)">
            <summary>
            Writes a new response to the connected socket channel.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that contains data to be sent.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Send(System.Byte[])">
            <summary>
            Send a new message to a connected socket.
            </summary>
            <param name="message">An array of type byte that contains the data to be sent.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
            <summary>
            Sends data to connected socket channel.
            </summary>
            <param name="buffer">An array of type <see cref="T:System.Byte"/> that contains the data to be sent.</param>
            <param name="size">The number of bytes to send.</param>
            <param name="offset">The position in the data buffer at which to begin sending data.</param>
            <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags"/> values.</param>
            <returns>The number of bytes sent to the <see cref="P:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.Socket"/>.</returns>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SocketChannel.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
            <summary>
            Sends data to a specific remote endpoint.
            </summary>
            <param name="buffer">An array of type <see cref="T:System.Byte"/> that contains the data to be sent.</param>
            <param name="size">The number of bytes to send.</param>
            <param name="offset">The position in the data buffer at which to begin sending data.</param>
            <param name="socketFlags">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags"/> values.</param>
            <param name="remoteEP">The <see cref="T:System.Net.EndPoint"/> that represents the destination location for the data.</param>
            <returns>The number of bytes sent.</returns>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder">
            <summary>
            Represents an authenticated ssl stream builder for server side applications.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Authentication.SslProtocols)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder"/> class.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder.Build(System.Net.Sockets.Socket)">
            <summary>
            Builds a new <see cref="T:System.Net.Security.SslStream"/> from a connected socket.
            </summary>
            <param name="socket">The connected socket to create a stream with.</param>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder.HandshakeTimeout">
            <summary>
            Amount of time to wait for the TLS handshake to complete.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder.Certificate">
            <summary>
            The X.509 certificate.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.Channel.SslStreamBuilder.Protocols">
            <summary>
            Allowed versions of ssl protocols.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.IServer">
            <summary>
            An interface for <see cref="T:Bytewizer.TinyCLR.Sockets.SocketService"/>.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.IServer.Start">
            <summary>
            Start the server accepting incoming requests.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.IServer.Stop">
            <summary>
            Stop processing requests and gracefully shut down the server if possible.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.SocketContext">
            <summary>
            Encapsulates all socket specific information about an individual request.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.SocketContext.Channel">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketContext.Abort">
            <summary>
            Aborts the connection underlying this request.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketContext.Clear">
            <inheritdoc/>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.ISocketContext">
            <summary>
            An interface for <see cref="T:Bytewizer.TinyCLR.Sockets.SocketContext"/>.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.ISocketContext.Channel">
            <summary>
            Gets or sets information about the underlying connection for this request.
            </summary>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.ServerOptions">
            <summary>
            Represents configuration options of server specific features.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.ServerOptions.Name">
            <summary>
            Specifies the name the server represents.
            </summary>
        </member>
        <member name="P:Bytewizer.TinyCLR.Sockets.ServerOptions.Listener">
            <summary>
            Configuration options of socket specific features.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Pipeline(Bytewizer.TinyCLR.Pipeline.ApplicationDelegate)">
            <summary>
            Configures <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplication"/> pipeline options. <see cref="T:Bytewizer.TinyCLR.Pipeline.Middleware"/> are executed in the order they are added.
            </summary>
            <param name="configure">The delegate for configuring the <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplicationBuilder"/> that will be used to construct the <see cref="T:Bytewizer.TinyCLR.Pipeline.Builder.IApplication"/>.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen">
            <summary>
            Bind to all ip address and port 80.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Int32)">
            <summary>
            Bind to the given port.
            </summary>
            <param name="port">The port for receiving data.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Net.IPEndPoint)">
            <summary>
            Bind to given ip endpoint.
            </summary>
            <param name="endPoint">The endpoint to bind on.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Net.IPAddress,System.Int32)">
            <summary>
            Bind to the given ip address and port.
            </summary>
            <param name="address">The ip address for receiving data.</param>
            <param name="port">The port for receiving data.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Int32,Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptionsDelegate)">
            <summary>
            Bind to the given ip address, port and configuration.
            </summary>
            <param name="port">The port for receiving data.</param>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> configuration options features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Net.IPAddress,System.Int32,Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptionsDelegate)">
            <summary>
            Bind to the given ip address, port and configuration.
            </summary>
            <param name="address">The ip address for receiving data.</param>
            <param name="port">The port for receiving data.</param>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> configuration options features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.ServerOptions.Listen(System.Net.IPEndPoint,Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptionsDelegate)">
            <summary>
            Bind to the given end point and configuration.
            </summary>
            <param name="endPoint">The endpoint for receiving data.</param>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> configuration options features.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate">
            <summary>
            Represents an options method to configure <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> specific features.
            </summary>
            <param name="configure">The <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> configuration specific features.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.SocketService">
            <summary>
            Represents a base implementation of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketService"/> which uses <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> for serving requests.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Sockets.SocketService._listener">
            <summary>
            The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> which listens for remote clients.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Sockets.SocketService._logger">
            <summary>
            The logger used to write to.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Sockets.SocketService._options">
            <summary>
            The configuration options of server specific features.
            </summary>
        </member>
        <member name="F:Bytewizer.TinyCLR.Sockets.SocketService._application">
            <summary>
            The application pipeline used to invoke pipeline middleware.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketService.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Pipeline.IMiddleware,Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketService"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="middleware">The <see cref="T:Bytewizer.TinyCLR.Pipeline.IMiddleware"/> to include first in the application pipeline.</param>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketService"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketService.Start">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketService.Stop">
            <inheritdoc/>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketService.ClientConnected(System.Object,Bytewizer.TinyCLR.Sockets.Channel.SocketChannel)">
            <summary>
            A client has connected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="channel">The socket channel for the connected endpoint.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketService.ClientDisconnected(System.Object,System.Exception)">
            <summary>
            A client has disconnected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="execption">The socket <see cref="T:System.Exception"/> for the disconnected endpoint.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.SocketServer">
            <summary>
            Represents an implementation of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> for creating network servers.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketServer.#ctor(Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> class.
            </summary>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketServer.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketServer.#ctor(Bytewizer.TinyCLR.Logging.ILoggerFactory,Bytewizer.TinyCLR.Pipeline.IMiddleware,Bytewizer.TinyCLR.Sockets.ServerOptionsDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> class.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="middleware">The <see cref="T:Bytewizer.TinyCLR.Pipeline.IMiddleware"/> to include in the application pipeline.</param>
            <param name="configure">The configuration options of <see cref="T:Bytewizer.TinyCLR.Sockets.SocketServer"/> specific features.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketServer.ClientConnected(System.Object,Bytewizer.TinyCLR.Sockets.Channel.SocketChannel)">
            <summary>
            A client has connected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="channel">The socket channel for the connected end point.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketServer.ClientDisconnected(System.Object,System.Exception)">
            <summary>
            A client has disconnected.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="execption">The socket <see cref="T:System.Exception"/> for the disconnected endpoint.</param>
        </member>
        <member name="T:Bytewizer.TinyCLR.Sockets.SocketListenerOptionsExtensions">
            <summary>
            Extension methods for <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions"/> that configures <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> for a given endpoint.
            </summary>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketListenerOptionsExtensions.UseHttps(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Configure <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> to use HTTPS.
            </summary>
            <param name="listenOptions">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions"/> to configure.</param>
            <param name="serverCertificate">The X.509 certificate.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketListenerOptionsExtensions.UseTcp(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions)">
            <summary>
            Configure <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> to use TCP.
            </summary>
            <param name="listenOptions">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions"/> to configure.</param>
        </member>
        <member name="M:Bytewizer.TinyCLR.Sockets.SocketListenerOptionsExtensions.UseUdp(Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions)">
            <summary>
            Configure <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListener"/> to use UDP.
            </summary>
            <param name="listenOptions">The <see cref="T:Bytewizer.TinyCLR.Sockets.Listener.SocketListenerOptions"/> to configure.</param>
        </member>
    </members>
</doc>
